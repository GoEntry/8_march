// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
const heart = document.getElementById('heart');
const container = document.querySelector('.heart-container');
const message = document.getElementById('message');
const toggle = document.getElementById('themeToggle');
const music1 = document.getElementById('music1');
const music2 = document.getElementById('music2');

let emojiInterval;
let activeMusic = music1;
let audioContext;
let gainNode;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
function init() {
    setupAudio();
    updateTheme(false);
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞—É–¥–∏–æ
function setupAudio() {
    audioContext = new (window.AudioContext || window.webkitAudioContext)();
    gainNode = audioContext.createGain();
    connectAudio(music1);
    connectAudio(music2);
    gainNode.connect(audioContext.destination);
    gainNode.gain.value = 0;
}

function connectAudio(music) {
    const source = audioContext.createMediaElementSource(music);
    source.connect(gainNode);
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–º—ã
function updateTheme(isDark) {
    document.body.classList.toggle('dark', isDark);
    heart.classList.toggle('dark', isDark);
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ —Å–º–∞–π–ª–∏–∫–æ–≤
    document.querySelectorAll('.emoji').forEach(emoji => {
        emoji.style.color = isDark ? '#990000' : '#ff5b5b';
    });
}

// –ü–ª–∞–≤–Ω–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º—É–∑—ã–∫–∏
function switchMusic(newMusic) {
    if (activeMusic === newMusic) return;

    // –ü–ª–∞–≤–Ω–æ–µ –≤—ã–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–π –º—É–∑—ã–∫–∏
    gainNode.gain.linearRampToValueAtTime(0, audioContext.currentTime + 1);
    setTimeout(() => {
        activeMusic.pause();
        activeMusic.currentTime = 0;
        activeMusic = newMusic;
        
        // –ü–ª–∞–≤–Ω–æ–µ –≤–∫–ª—é—á–µ–Ω–∏–µ –Ω–æ–≤–æ–π –º—É–∑—ã–∫–∏
        if (container.classList.contains('open')) {
            activeMusic.play();
            gainNode.gain.linearRampToValueAtTime(1, audioContext.currentTime + 1);
        }
    }, 1000);
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ —Å–µ—Ä–¥—Ü–∞
function openHeart() {
    if (!container.classList.contains('open')) {
        container.classList.add('open');
        createFlowers();
        emojiInterval = setInterval(createEmojis, 200);
        
        // –ü–ª–∞–≤–Ω—ã–π —Å—Ç–∞—Ä—Ç –º—É–∑—ã–∫–∏
        if (activeMusic.paused) {
            activeMusic.play();
            gainNode.gain.linearRampToValueAtTime(1, audioContext.currentTime + 1);
        }
    }
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–µ—Ä–¥—Ü–∞
function closeHeart() {
    if (container.classList.contains('open')) {
        container.classList.remove('open');
        clearInterval(emojiInterval);
        
        // –ü–ª–∞–≤–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –º—É–∑—ã–∫–∏
        gainNode.gain.linearRampToValueAtTime(0, audioContext.currentTime + 1);
        setTimeout(() => {
            activeMusic.pause();
            activeMusic.currentTime = 0;
        }, 1000);
    }
}

// –°–æ–∑–¥–∞–Ω–∏–µ —Å–º–∞–π–ª–∏–∫–æ–≤
function createEmojis() {
    const emoji = document.createElement('div');
    emoji.className = 'emoji';
    emoji.textContent = getRandomEmoji();
    emoji.style.left = `${Math.random() * 100}vw`;
    emoji.style.animationDuration = `${Math.random() * 3 + 2}s`;
    emoji.style.fontSize = `${Math.random() * 2 + 1}rem`;
    emoji.style.color = document.body.classList.contains('dark') ? '#990000' : '#ff5b5b';
    document.body.appendChild(emoji);
    setTimeout(() => emoji.remove(), 5000);
}

function getRandomEmoji() {
    const emojis = ['üòò', 'üíã', '‚ù§Ô∏è', 'üíï', 'üíû', 'üíñ', 'üíò', 'üíê', 'üå∑', 'üåπ', 'üå∏', 'üå∫' ];
    return emojis[Math.floor(Math.random() * emojis.length)];
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
heart.addEventListener('click', (e) => {
    e.stopPropagation();
    openHeart();
});

document.addEventListener('click', (e) => {
    if (container.classList.contains('open') && 
        !heart.contains(e.target) && 
        !message.contains(e.target)) {
        closeHeart();
    }
});

document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') closeHeart();
});

toggle.addEventListener('change', (e) => {
    const isDark = e.target.checked;
    updateTheme(isDark);
    switchMusic(isDark ? music2 : music1);
});

// –ó–∞–ø—É—Å–∫
init();